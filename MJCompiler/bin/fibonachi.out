Buildfile: C:\Users\jovan\OneDrive\Desktop\ETF HELL\77777 SEMESTAR\prevodioci\projekat\workspace\MJCompiler\build.xml

test:

testRun:
     [java] file:/C:/Program%20Files/apache-ant-1.10.9/lib/ant-launcher.jar
     [java] file:/C:/Users/jovan/OneDrive/Desktop/ETF%20HELL/77777%20SEMESTAR/prevodioci/projekat/workspace/MJCompiler/config/log4j.xml
     [java] INFO  17:36:49,953 - Compiling source file: C:\Users\jovan\OneDrive\Desktop\ETF HELL\77777 SEMESTAR\prevodioci\projekat\workspace\MJCompiler\test\fibonachi.mj
     [java] INFO  17:36:50,291 - #2 program
     [java] INFO  17:36:50,291 - #49 test301
     [java] INFO  17:36:50,291 - #3 {
     [java] INFO  17:36:50,297 - #49 int
     [java] INFO  17:36:50,299 - #49 fibonachi
     [java] INFO  17:36:50,302 - #12 (
     [java] INFO  17:36:50,305 - #49 int
     [java] INFO  17:36:50,306 - #49 n
     [java] INFO  17:36:50,306 - #13 )
     [java] INFO  17:36:50,306 - #3 {
     [java] INFO  17:36:50,312 - #14 if
     [java] INFO  17:36:50,315 - #12 (
     [java] INFO  17:36:50,315 - #49 n
     [java] INFO  17:36:50,315 - #37 <=
     [java] INFO  17:36:50,317 - #46 1
     [java] INFO  17:36:50,323 - #13 )
     [java] INFO  17:36:50,325 - #24 return
     [java] INFO  17:36:50,325 - #49 n
     [java] INFO  17:36:50,326 - #7 ;
     [java] INFO  17:36:50,326 - #24 return
     [java] INFO  17:36:50,330 - #49 fibonachi
     [java] INFO  17:36:50,330 - #12 (
     [java] INFO  17:36:50,330 - #49 n
     [java] INFO  17:36:50,330 - #39 -
     [java] INFO  17:36:50,331 - #46 1
     [java] INFO  17:36:50,336 - #13 )
     [java] INFO  17:36:50,337 - #38 +
     [java] INFO  17:36:50,337 - #49 fibonachi
     [java] INFO  17:36:50,340 - #12 (
     [java] INFO  17:36:50,340 - #49 n
     [java] INFO  17:36:50,340 - #39 -
     [java] INFO  17:36:50,340 - #46 2
     [java] INFO  17:36:50,340 - #13 )
     [java] INFO  17:36:50,341 - #7 ;
     [java] INFO  17:36:50,341 - #4 }
     [java] INFO  17:36:50,341 - #44 void
     [java] INFO  17:36:50,344 - #49 main
     [java] INFO  17:36:50,347 - #12 (
     [java] INFO  17:36:50,348 - #13 )
     [java] INFO  17:36:50,348 - #49 int
     [java] INFO  17:36:50,351 - #49 num
     [java] INFO  17:36:50,352 - #7 ;
     [java] INFO  17:36:50,352 - #3 {
     [java] INFO  17:36:50,357 - #25 read
     [java] INFO  17:36:50,357 - #12 (
     [java] INFO  17:36:50,357 - #49 num
     [java] INFO  17:36:50,358 - #13 )
     [java] INFO  17:36:50,358 - #7 ;
     [java] INFO  17:36:50,358 - #49 num
     [java] INFO  17:36:50,359 - #6 =
     [java] INFO  17:36:50,359 - #49 fibonachi
     [java] INFO  17:36:50,363 - #12 (
     [java] INFO  17:36:50,363 - #49 num
     [java] INFO  17:36:50,363 - #13 )
     [java] INFO  17:36:50,363 - #7 ;
     [java] INFO  17:36:50,364 - #26 print
     [java] INFO  17:36:50,364 - #12 (
     [java] INFO  17:36:50,365 - #49 num
     [java] INFO  17:36:50,365 - #13 )
     [java] INFO  17:36:50,365 - #7 ;
     [java] INFO  17:36:50,365 - #4 }
     [java] INFO  17:36:50,366 - #4 }
     [java] INFO  17:36:50,384 - Program(
     [java]   ProgName(
     [java]    test301
     [java]   ) [ProgName]
     [java]   NoDecl(
     [java]   ) [NoDecl]
     [java]   MethodDeclUse(
     [java]     MethodDeclUse(
     [java]       NoMethodDecl(
     [java]       ) [NoMethodDecl]
     [java]       MethodDecPar(
     [java]         MethodTypeName(
     [java]           MethType(
     [java]             Type(
     [java]              int
     [java]             ) [Type]
     [java]           ) [MethType]
     [java]          fibonachi
     [java]         ) [MethodTypeName]
     [java]         FormParListUse(
     [java]           FormParSingle(
     [java]             FormParamNoError(
     [java]               FormParNoBrack(
     [java]                 Type(
     [java]                  int
     [java]                 ) [Type]
     [java]                n
     [java]               ) [FormParNoBrack]
     [java]             ) [FormParamNoError]
     [java]           ) [FormParSingle]
     [java]         ) [FormParListUse]
     [java]         MethodLocal(
     [java]           NoVarDecl(
     [java]           ) [NoVarDecl]
     [java]         ) [MethodLocal]
     [java]         MultStatement(
     [java]           MultStatement(
     [java]             NoStatementList(
     [java]             ) [NoStatementList]
     [java]             StatementIf(
     [java]               ConditionPar(
     [java]                 ConditionSingle(
     [java]                   CondTermSingle(
     [java]                     CondFactOp(
     [java]                       ExprTermList(
     [java]                         TermSinglePos(
     [java]                           FactorSingle(
     [java]                             FactVar(
     [java]                               DesignatorSingle(
     [java]                                n
     [java]                               ) [DesignatorSingle]
     [java]                             ) [FactVar]
     [java]                           ) [FactorSingle]
     [java]                         ) [TermSinglePos]
     [java]                       ) [ExprTermList]
     [java]                       ReLSE(
     [java]                       ) [ReLSE]
     [java]                       ExprTermList(
     [java]                         TermSinglePos(
     [java]                           FactorSingle(
     [java]                             FactorNum(
     [java]                              1
     [java]                             ) [FactorNum]
     [java]                           ) [FactorSingle]
     [java]                         ) [TermSinglePos]
     [java]                       ) [ExprTermList]
     [java]                     ) [CondFactOp]
     [java]                   ) [CondTermSingle]
     [java]                 ) [ConditionSingle]
     [java]               ) [ConditionPar]
     [java]               IfOnlyStm(
     [java]                 StatementRetExpr(
     [java]                   ExprTermList(
     [java]                     TermSinglePos(
     [java]                       FactorSingle(
     [java]                         FactVar(
     [java]                           DesignatorSingle(
     [java]                            n
     [java]                           ) [DesignatorSingle]
     [java]                         ) [FactVar]
     [java]                       ) [FactorSingle]
     [java]                     ) [TermSinglePos]
     [java]                   ) [ExprTermList]
     [java]                 ) [StatementRetExpr]
     [java]               ) [IfOnlyStm]
     [java]             ) [StatementIf]
     [java]           ) [MultStatement]
     [java]           StatementRetExpr(
     [java]             ExprTermList(
     [java]               TermExpr(
     [java]                 TermSinglePos(
     [java]                   FactorSingle(
     [java]                     FunCallParam(
     [java]                       DesignatorSingle(
     [java]                        fibonachi
     [java]                       ) [DesignatorSingle]
     [java]                       ActParsSingle(
     [java]                         ExprTermList(
     [java]                           TermExpr(
     [java]                             TermSinglePos(
     [java]                               FactorSingle(
     [java]                                 FactVar(
     [java]                                   DesignatorSingle(
     [java]                                    n
     [java]                                   ) [DesignatorSingle]
     [java]                                 ) [FactVar]
     [java]                               ) [FactorSingle]
     [java]                             ) [TermSinglePos]
     [java]                             AddMinus(
     [java]                             ) [AddMinus]
     [java]                             FactorSingle(
     [java]                               FactorNum(
     [java]                                1
     [java]                               ) [FactorNum]
     [java]                             ) [FactorSingle]
     [java]                           ) [TermExpr]
     [java]                         ) [ExprTermList]
     [java]                       ) [ActParsSingle]
     [java]                     ) [FunCallParam]
     [java]                   ) [FactorSingle]
     [java]                 ) [TermSinglePos]
     [java]                 AddPlus(
     [java]                 ) [AddPlus]
     [java]                 FactorSingle(
     [java]                   FunCallParam(
     [java]                     DesignatorSingle(
     [java]                      fibonachi
     [java]                     ) [DesignatorSingle]
     [java]                     ActParsSingle(
     [java]                       ExprTermList(
     [java]                         TermExpr(
     [java]                           TermSinglePos(
     [java]                             FactorSingle(
     [java]                               FactVar(
     [java]                                 DesignatorSingle(
     [java]                                  n
     [java]                                 ) [DesignatorSingle]
     [java]                               ) [FactVar]
     [java]                             ) [FactorSingle]
     [java]                           ) [TermSinglePos]
     [java]                           AddMinus(
     [java]                           ) [AddMinus]
     [java]                           FactorSingle(
     [java]                             FactorNum(
     [java]                              2
     [java]                             ) [FactorNum]
     [java]                           ) [FactorSingle]
     [java]                         ) [TermExpr]
     [java]                       ) [ExprTermList]
     [java]                     ) [ActParsSingle]
     [java]                   ) [FunCallParam]
     [java]                 ) [FactorSingle]
     [java]               ) [TermExpr]
     [java]             ) [ExprTermList]
     [java]           ) [StatementRetExpr]
     [java]         ) [MultStatement]
     [java]       ) [MethodDecPar]
     [java]     ) [MethodDeclUse]
     [java]     MethodDecPar(
     [java]       MethodTypeName(
     [java]         MethVoid(
     [java]         ) [MethVoid]
     [java]        main
     [java]       ) [MethodTypeName]
     [java]       NoFormParList(
     [java]       ) [NoFormParList]
     [java]       MethodLocal(
     [java]         VarDeclUse(
     [java]           NoVarDecl(
     [java]           ) [NoVarDecl]
     [java]           VarDecl(
     [java]             Type(
     [java]              int
     [java]             ) [Type]
     [java]             SingleVar(
     [java]               VarParamNoBrack(
     [java]                num
     [java]               ) [VarParamNoBrack]
     [java]             ) [SingleVar]
     [java]           ) [VarDecl]
     [java]         ) [VarDeclUse]
     [java]       ) [MethodLocal]
     [java]       MultStatement(
     [java]         MultStatement(
     [java]           MultStatement(
     [java]             NoStatementList(
     [java]             ) [NoStatementList]
     [java]             StatementRead(
     [java]               DesignatorSingle(
     [java]                num
     [java]               ) [DesignatorSingle]
     [java]             ) [StatementRead]
     [java]           ) [MultStatement]
     [java]           StatementDesignator(
     [java]             DesStmAssign(
     [java]               DesignatorSingle(
     [java]                num
     [java]               ) [DesignatorSingle]
     [java]               Assignop(
     [java]               ) [Assignop]
     [java]               DesAssignNoErr(
     [java]                 ExprTermList(
     [java]                   TermSinglePos(
     [java]                     FactorSingle(
     [java]                       FunCallParam(
     [java]                         DesignatorSingle(
     [java]                          fibonachi
     [java]                         ) [DesignatorSingle]
     [java]                         ActParsSingle(
     [java]                           ExprTermList(
     [java]                             TermSinglePos(
     [java]                               FactorSingle(
     [java]                                 FactVar(
     [java]                                   DesignatorSingle(
     [java]                                    num
     [java]                                   ) [DesignatorSingle]
     [java]                                 ) [FactVar]
     [java]                               ) [FactorSingle]
     [java]                             ) [TermSinglePos]
     [java]                           ) [ExprTermList]
     [java]                         ) [ActParsSingle]
     [java]                       ) [FunCallParam]
     [java]                     ) [FactorSingle]
     [java]                   ) [TermSinglePos]
     [java]                 ) [ExprTermList]
     [java]               ) [DesAssignNoErr]
     [java]             ) [DesStmAssign]
     [java]           ) [StatementDesignator]
     [java]         ) [MultStatement]
     [java]         StatementPrint(
     [java]           ExprTermList(
     [java]             TermSinglePos(
     [java]               FactorSingle(
     [java]                 FactVar(
     [java]                   DesignatorSingle(
     [java]                    num
     [java]                   ) [DesignatorSingle]
     [java]                 ) [FactVar]
     [java]               ) [FactorSingle]
     [java]             ) [TermSinglePos]
     [java]           ) [ExprTermList]
     [java]         ) [StatementPrint]
     [java]       ) [MultStatement]
     [java]     ) [MethodDecPar]
     [java]   ) [MethodDeclUse]
     [java] ) [Program]
     [java] INFO  17:36:50,400 - ===================================
     [java] INFO  17:36:50,409 - Pristupa se (n) koji je po redu  (1) formalni argument funkcije (fibonachi) | Var n: int, 0, 1  na liniji 8
     [java] INFO  17:36:50,409 - Koristi se promenljiva (n) | Var n: int, 0, 1  na liniji 8
     [java] INFO  17:36:50,410 - Pristupa se (n) koji je po redu  (1) formalni argument funkcije (fibonachi) | Var n: int, 0, 1  na liniji 9
     [java] INFO  17:36:50,410 - Koristi se promenljiva (n) | Var n: int, 0, 1  na liniji 9
     [java] INFO  17:36:50,410 - Pristup globalnoj funkciji (fibonachi) | Meth fibonachi: int, 0, 0  na liniji 10
     [java] INFO  17:36:50,410 - Pristupa se (n) koji je po redu  (1) formalni argument funkcije (fibonachi) | Var n: int, 0, 1  na liniji 10
     [java] INFO  17:36:50,410 - Koristi se promenljiva (n) | Var n: int, 0, 1  na liniji 10
     [java] INFO  17:36:50,413 - Pristup globalnoj funkciji (fibonachi) | Meth fibonachi: int, 0, 0  na liniji 10
     [java] INFO  17:36:50,414 - Pristupa se (n) koji je po redu  (1) formalni argument funkcije (fibonachi) | Var n: int, 0, 1  na liniji 10
     [java] INFO  17:36:50,414 - Koristi se promenljiva (n) | Var n: int, 0, 1  na liniji 10
     [java] INFO  17:36:50,414 - Pristup lokalnoj promenljivi (num) | Var num: int, 0, 1  na liniji 15
     [java] INFO  17:36:50,414 - Pristup lokalnoj promenljivi (num) | Var num: int, 0, 1  na liniji 16
     [java] INFO  17:36:50,414 - Pristup globalnoj funkciji (fibonachi) | Meth fibonachi: int, 0, 1  na liniji 16
     [java] INFO  17:36:50,414 - Pristup lokalnoj promenljivi (num) | Var num: int, 0, 1  na liniji 16
     [java] INFO  17:36:50,415 - Koristi se promenljiva (num) | Var num: int, 0, 1  na liniji 16
     [java] INFO  17:36:50,415 - Pristup lokalnoj promenljivi (num) | Var num: int, 0, 1  na liniji 17
     [java] INFO  17:36:50,415 - Koristi se promenljiva (num) | Var num: int, 0, 1  na liniji 17
     [java] INFO  17:36:50,415 - ===================================
     [java] =====================SYMBOL TABLE DUMP=========================
     [java] Type int: int, -1, -1 
     [java] Type char: char, -1, -1 
     [java] Con eol: char, 10, 0 
     [java] Con null: Class [], 0, 0 
     [java] Meth chr: char, 0, 1 
     [java]    Var i: int, 0, 1 
     [java] 
     [java] Meth ord: int, 0, 1 
     [java]    Var ch: char, 0, 1 
     [java] 
     [java] Meth len: int, 0, 1 
     [java]    Var arr: Arr of notype, 0, 1 
     [java] 
     [java] Type bool: bool, -1, -1 
     [java] Prog test301: notype, 0, 1 
     [java]    Meth fibonachi: int, 0, 1 
     [java]       Var n: int, 0, 1 
     [java] 
     [java]    Meth main: notype, 0, 0 
     [java]       Var num: int, 0, 1 
     [java] 
     [java] 
     [java] 
     [java] INFO  17:36:50,454 - Parsiranje uspesno zavrseno!

BUILD SUCCESSFUL
Total time: 0 seconds
