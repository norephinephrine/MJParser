INFO  15:43:15,916 - Compiling source file: C:\Users\jovan\OneDrive\Desktop\ETF HELL\77777 SEMESTAR\prevodioci\projekat\workspace\MJCompiler\test\syn_test\syntax_error2.mj
INFO  15:43:16,284 - #2 program
INFO  15:43:16,285 - #49 SyntaxErr
INFO  15:43:16,285 - #49 int
INFO  15:43:16,291 - #49 a
INFO  15:43:16,294 - #7 ;
INFO  15:43:16,295 - #49 bool
INFO  15:43:16,299 - #49 b
INFO  15:43:16,299 - #7 ;
INFO  15:43:16,300 - #43 class
INFO  15:43:16,300 - #49 A
INFO  15:43:16,300 - #3 {
INFO  15:43:16,305 - #49 int
INFO  15:43:16,310 - #49 x
INFO  15:43:16,311 - #7 ;
INFO  15:43:16,311 - #3 {
INFO  15:43:16,312 - #44 void
INFO  15:43:16,315 - #49 main
INFO  15:43:16,319 - #12 (
INFO  15:43:16,322 - #13 )
INFO  15:43:16,322 - #3 {
INFO  15:43:16,331 - #4 }
INFO  15:43:16,336 - #4 }
INFO  15:43:16,339 - #4 }
INFO  15:43:16,339 - #3 {
INFO  15:43:16,340 - #49 int
INFO  15:43:16,340 - #49 test
INFO  15:43:16,340 - #12 (
INFO  15:43:16,341 - #13 )
INFO  15:43:16,341 - #3 {
INFO  15:43:16,341 - #24 return
INFO  15:43:16,342 - #48 a
INFO  15:43:16,343 - #7 ;
INFO  15:43:16,344 - #4 }
INFO  15:43:16,345 - #49 int
INFO  15:43:16,345 - #49 funErr
INFO  15:43:16,345 - #12 (
INFO  15:43:16,346 - #49 int
INFO  15:43:16,346 - #49 a
INFO  15:43:16,346 - #8 ,
INFO  15:43:16,347 - #49 A
INFO  15:43:16,347 - #49 a
INFO  15:43:16,347 - #8 ,
INFO  15:43:16,348 - #49 char
INFO  15:43:16,348 - #49 c
INFO  15:43:16,348 - #13 )
INFO  15:43:16,349 - #3 {
INFO  15:43:16,349 - #4 }
INFO  15:43:16,350 - #49 int
INFO  15:43:16,350 - #49 fun
INFO  15:43:16,350 - #12 (
INFO  15:43:16,350 - #49 int
INFO  15:43:16,351 - #49 a
INFO  15:43:16,351 - #8 ,
INFO  15:43:16,351 - #49 A
INFO  15:43:16,351 - #49 b
INFO  15:43:16,355 - #8 ,
INFO  15:43:16,355 - #49 char
INFO  15:43:16,355 - #49 c
INFO  15:43:16,356 - #13 )
INFO  15:43:16,356 - #3 {
INFO  15:43:16,356 - #4 }
INFO  15:43:16,357 - #44 void
INFO  15:43:16,357 - #49 main
INFO  15:43:16,357 - #12 (
INFO  15:43:16,358 - #13 )
INFO  15:43:16,358 - #49 A
INFO  15:43:16,358 - #49 aClass
INFO  15:43:16,358 - #7 ;
INFO  15:43:16,358 - #49 char
INFO  15:43:16,362 - #49 niz
INFO  15:43:16,362 - #9 [
INFO  15:43:16,362 - #10 ]
INFO  15:43:16,362 - #7 ;
INFO  15:43:16,363 - #3 {
INFO  15:43:16,363 - #49 a
INFO  15:43:16,363 - #6 =
INFO  15:43:16,364 - #46 2
INFO  15:43:16,369 - #7 ;
INFO  15:43:16,370 - #22 break
INFO  15:43:16,370 - #7 ;
INFO  15:43:16,371 - #23 continue
INFO  15:43:16,373 - #7 ;
INFO  15:43:16,374 - #20 switch
INFO  15:43:16,384 - #12 (
INFO  15:43:16,388 - #49 a
INFO  15:43:16,388 - #13 )
INFO  15:43:16,389 - #3 {
INFO  15:43:16,391 - #21 case
INFO  15:43:16,394 - #46 1
INFO  15:43:16,394 - #45 :
INFO  15:43:16,395 - #22 break
INFO  15:43:16,398 - #7 ;
INFO  15:43:16,398 - #4 }
INFO  15:43:16,401 - #18 do
INFO  15:43:16,402 - #3 {
INFO  15:43:16,405 - #22 break
INFO  15:43:16,405 - #7 ;
INFO  15:43:16,406 - #23 continue
INFO  15:43:16,406 - #7 ;
INFO  15:43:16,406 - #4 }
INFO  15:43:16,406 - #19 while
INFO  15:43:16,407 - #12 (
INFO  15:43:16,409 - #49 a
INFO  15:43:16,410 - #36 <
INFO  15:43:16,410 - #46 2
INFO  15:43:16,415 - #13 )
INFO  15:43:16,416 - #7 ;
INFO  15:43:16,416 - #49 aClass
INFO  15:43:16,417 - #6 =
INFO  15:43:16,417 - #30 new
INFO  15:43:16,417 - #49 A
INFO  15:43:16,417 - #7 ;
INFO  15:43:16,418 - #49 niz
INFO  15:43:16,418 - #6 =
INFO  15:43:16,418 - #30 new
INFO  15:43:16,418 - #49 char
INFO  15:43:16,418 - #9 [
INFO  15:43:16,419 - #46 2
INFO  15:43:16,419 - #10 ]
INFO  15:43:16,419 - #7 ;
INFO  15:43:16,419 - #25 read
INFO  15:43:16,419 - #12 (
INFO  15:43:16,420 - #49 niz
INFO  15:43:16,420 - #9 [
INFO  15:43:16,420 - #46 0
INFO  15:43:16,420 - #10 ]
INFO  15:43:16,420 - #13 )
INFO  15:43:16,421 - #7 ;
INFO  15:43:16,421 - #25 read
INFO  15:43:16,421 - #12 (
INFO  15:43:16,421 - #49 b
INFO  15:43:16,422 - #13 )
INFO  15:43:16,422 - #7 ;
INFO  15:43:16,422 - #25 read
INFO  15:43:16,422 - #12 (
INFO  15:43:16,422 - #49 aClass
INFO  15:43:16,422 - #31 .
INFO  15:43:16,425 - #49 x
INFO  15:43:16,425 - #13 )
INFO  15:43:16,425 - #7 ;
INFO  15:43:16,425 - #25 read
INFO  15:43:16,426 - #12 (
INFO  15:43:16,426 - #49 aClass
INFO  15:43:16,426 - #13 )
INFO  15:43:16,426 - #7 ;
INFO  15:43:16,426 - #26 print
INFO  15:43:16,426 - #12 (
INFO  15:43:16,427 - #49 niz
INFO  15:43:16,427 - #9 [
INFO  15:43:16,427 - #46 0
INFO  15:43:16,427 - #10 ]
INFO  15:43:16,427 - #13 )
INFO  15:43:16,428 - #7 ;
INFO  15:43:16,428 - #26 print
INFO  15:43:16,428 - #12 (
INFO  15:43:16,428 - #49 b
INFO  15:43:16,428 - #13 )
INFO  15:43:16,429 - #7 ;
INFO  15:43:16,429 - #26 print
INFO  15:43:16,429 - #12 (
INFO  15:43:16,429 - #49 aClass
INFO  15:43:16,429 - #31 .
INFO  15:43:16,430 - #49 x
INFO  15:43:16,430 - #13 )
INFO  15:43:16,430 - #7 ;
INFO  15:43:16,430 - #26 print
INFO  15:43:16,431 - #12 (
INFO  15:43:16,431 - #49 aClass
INFO  15:43:16,431 - #13 )
INFO  15:43:16,431 - #7 ;
INFO  15:43:16,431 - #14 if
INFO  15:43:16,432 - #12 (
INFO  15:43:16,432 - #46 2
INFO  15:43:16,432 - #13 )
INFO  15:43:16,432 - #3 {
INFO  15:43:16,433 - #4 }
INFO  15:43:16,433 - #14 if
INFO  15:43:16,436 - #12 (
INFO  15:43:16,436 - #49 b
INFO  15:43:16,437 - #13 )
INFO  15:43:16,437 - #3 {
INFO  15:43:16,437 - #4 }
INFO  15:43:16,437 - #18 do
INFO  15:43:16,437 - #3 {
INFO  15:43:16,438 - #4 }
INFO  15:43:16,438 - #19 while
INFO  15:43:16,438 - #12 (
INFO  15:43:16,438 - #46 2
INFO  15:43:16,438 - #13 )
INFO  15:43:16,439 - #7 ;
INFO  15:43:16,439 - #18 do
INFO  15:43:16,439 - #3 {
INFO  15:43:16,439 - #4 }
INFO  15:43:16,439 - #19 while
INFO  15:43:16,439 - #12 (
INFO  15:43:16,440 - #49 b
INFO  15:43:16,440 - #13 )
INFO  15:43:16,440 - #7 ;
INFO  15:43:16,440 - #20 switch
INFO  15:43:16,440 - #12 (
INFO  15:43:16,441 - #49 b
INFO  15:43:16,441 - #13 )
INFO  15:43:16,441 - #3 {
INFO  15:43:16,441 - #21 case
INFO  15:43:16,441 - #46 1
INFO  15:43:16,441 - #45 :
INFO  15:43:16,442 - #22 break
INFO  15:43:16,442 - #7 ;
INFO  15:43:16,442 - #21 case
INFO  15:43:16,442 - #46 2
INFO  15:43:16,442 - #45 :
INFO  15:43:16,442 - #22 break
INFO  15:43:16,443 - #7 ;
INFO  15:43:16,443 - #4 }
INFO  15:43:16,443 - #20 switch
INFO  15:43:16,443 - #12 (
INFO  15:43:16,443 - #46 2
INFO  15:43:16,443 - #13 )
INFO  15:43:16,444 - #3 {
INFO  15:43:16,444 - #21 case
INFO  15:43:16,444 - #46 1
INFO  15:43:16,444 - #45 :
INFO  15:43:16,444 - #22 break
INFO  15:43:16,444 - #7 ;
INFO  15:43:16,447 - #21 case
INFO  15:43:16,448 - #46 1
INFO  15:43:16,448 - #45 :
INFO  15:43:16,448 - #22 break
INFO  15:43:16,448 - #7 ;
INFO  15:43:16,448 - #4 }
INFO  15:43:16,449 - #49 fun
INFO  15:43:16,449 - #12 (
INFO  15:43:16,449 - #49 a
INFO  15:43:16,449 - #13 )
INFO  15:43:16,450 - #7 ;
INFO  15:43:16,450 - #49 fun
INFO  15:43:16,450 - #12 (
INFO  15:43:16,450 - #49 a
INFO  15:43:16,451 - #8 ,
INFO  15:43:16,451 - #49 aClass
INFO  15:43:16,451 - #8 ,
INFO  15:43:16,451 - #49 b
INFO  15:43:16,451 - #13 )
INFO  15:43:16,452 - #7 ;
INFO  15:43:16,452 - #4 }
INFO  15:43:16,452 - #4 }
INFO  15:43:16,467 - Program(
  ProgName(
   SyntaxErr
  ) [ProgName]
  MultDecl(
    MultDecl(
      MultDecl(
        NoDecl(
        ) [NoDecl]
        DecVar(
          GlobalVarDecl(
            Type(
             int
            ) [Type]
            GlobalSingleVar(
              GlobalVarSemi(
                VarParamNoBrack(
                 a
                ) [VarParamNoBrack]
              ) [GlobalVarSemi]
            ) [GlobalSingleVar]
          ) [GlobalVarDecl]
        ) [DecVar]
      ) [MultDecl]
      DecVar(
        GlobalVarDecl(
          Type(
           bool
          ) [Type]
          GlobalSingleVar(
            GlobalVarSemi(
              VarParamNoBrack(
               b
              ) [VarParamNoBrack]
            ) [GlobalVarSemi]
          ) [GlobalSingleVar]
        ) [GlobalVarDecl]
      ) [DecVar]
    ) [MultDecl]
    DecClass(
      ClassDeclMeth(
        ClassName(
         A
        ) [ClassName]
        NoExtendType(
        ) [NoExtendType]
        ClassVarDeclUse(
          NoClassVarDecl(
          ) [NoClassVarDecl]
          ClassVarDeclNoErr(
            Type(
             int
            ) [Type]
            SingleVar(
              VarParamNoBrack(
               x
              ) [VarParamNoBrack]
            ) [SingleVar]
          ) [ClassVarDeclNoErr]
        ) [ClassVarDeclUse]
        MethodDeclUse(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecPar(
            MethodTypeName(
              MethVoid(
              ) [MethVoid]
             main
            ) [MethodTypeName]
            NoFormParList(
            ) [NoFormParList]
            MethodLocal(
              NoVarDecl(
              ) [NoVarDecl]
            ) [MethodLocal]
            NoStatementList(
            ) [NoStatementList]
          ) [MethodDecPar]
        ) [MethodDeclUse]
      ) [ClassDeclMeth]
    ) [DecClass]
  ) [MultDecl]
  MethodDeclUse(
    MethodDeclUse(
      MethodDeclUse(
        MethodDeclUse(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecPar(
            MethodTypeName(
              MethType(
                Type(
                 int
                ) [Type]
              ) [MethType]
             test
            ) [MethodTypeName]
            NoFormParList(
            ) [NoFormParList]
            MethodLocal(
              NoVarDecl(
              ) [NoVarDecl]
            ) [MethodLocal]
            MultStatement(
              NoStatementList(
              ) [NoStatementList]
              StatementRetExpr(
                ExprTermList(
                  TermSinglePos(
                    FactorSingle(
                      FactorChar(
                       a
                      ) [FactorChar]
                    ) [FactorSingle]
                  ) [TermSinglePos]
                ) [ExprTermList]
              ) [StatementRetExpr]
            ) [MultStatement]
          ) [MethodDecPar]
        ) [MethodDeclUse]
        MethodDecPar(
          MethodTypeName(
            MethType(
              Type(
               int
              ) [Type]
            ) [MethType]
           funErr
          ) [MethodTypeName]
          FormParListUse(
            FormParMult(
              FormParametarComma(
                FormParNoBrack(
                  Type(
                   int
                  ) [Type]
                 a
                ) [FormParNoBrack]
              ) [FormParametarComma]
              FormParMult(
                FormParametarComma(
                  FormParNoBrack(
                    Type(
                     A
                    ) [Type]
                   a
                  ) [FormParNoBrack]
                ) [FormParametarComma]
                FormParSingle(
                  FormParamNoError(
                    FormParNoBrack(
                      Type(
                       char
                      ) [Type]
                     c
                    ) [FormParNoBrack]
                  ) [FormParamNoError]
                ) [FormParSingle]
              ) [FormParMult]
            ) [FormParMult]
          ) [FormParListUse]
          MethodLocal(
            NoVarDecl(
            ) [NoVarDecl]
          ) [MethodLocal]
          NoStatementList(
          ) [NoStatementList]
        ) [MethodDecPar]
      ) [MethodDeclUse]
      MethodDecPar(
        MethodTypeName(
          MethType(
            Type(
             int
            ) [Type]
          ) [MethType]
         fun
        ) [MethodTypeName]
        FormParListUse(
          FormParMult(
            FormParametarComma(
              FormParNoBrack(
                Type(
                 int
                ) [Type]
               a
              ) [FormParNoBrack]
            ) [FormParametarComma]
            FormParMult(
              FormParametarComma(
                FormParNoBrack(
                  Type(
                   A
                  ) [Type]
                 b
                ) [FormParNoBrack]
              ) [FormParametarComma]
              FormParSingle(
                FormParamNoError(
                  FormParNoBrack(
                    Type(
                     char
                    ) [Type]
                   c
                  ) [FormParNoBrack]
                ) [FormParamNoError]
              ) [FormParSingle]
            ) [FormParMult]
          ) [FormParMult]
        ) [FormParListUse]
        MethodLocal(
          NoVarDecl(
          ) [NoVarDecl]
        ) [MethodLocal]
        NoStatementList(
        ) [NoStatementList]
      ) [MethodDecPar]
    ) [MethodDeclUse]
    MethodDecPar(
      MethodTypeName(
        MethVoid(
        ) [MethVoid]
       main
      ) [MethodTypeName]
      NoFormParList(
      ) [NoFormParList]
      MethodLocal(
        VarDeclUse(
          VarDeclUse(
            NoVarDecl(
            ) [NoVarDecl]
            VarDecl(
              Type(
               A
              ) [Type]
              SingleVar(
                VarParamNoBrack(
                 aClass
                ) [VarParamNoBrack]
              ) [SingleVar]
            ) [VarDecl]
          ) [VarDeclUse]
          VarDecl(
            Type(
             char
            ) [Type]
            SingleVar(
              VarParamBrack(
               niz
              ) [VarParamBrack]
            ) [SingleVar]
          ) [VarDecl]
        ) [VarDeclUse]
      ) [MethodLocal]
      MultStatement(
        MultStatement(
          MultStatement(
            MultStatement(
              MultStatement(
                MultStatement(
                  MultStatement(
                    MultStatement(
                      MultStatement(
                        MultStatement(
                          MultStatement(
                            MultStatement(
                              MultStatement(
                                MultStatement(
                                  MultStatement(
                                    MultStatement(
                                      MultStatement(
                                        MultStatement(
                                          MultStatement(
                                            MultStatement(
                                              MultStatement(
                                                MultStatement(
                                                  MultStatement(
                                                    NoStatementList(
                                                    ) [NoStatementList]
                                                    StatementDesignator(
                                                      DesStmAssign(
                                                        DesignatorSingle(
                                                         a
                                                        ) [DesignatorSingle]
                                                        Assignop(
                                                        ) [Assignop]
                                                        DesAssignNoErr(
                                                          ExprTermList(
                                                            TermSinglePos(
                                                              FactorSingle(
                                                                FactorNum(
                                                                 2
                                                                ) [FactorNum]
                                                              ) [FactorSingle]
                                                            ) [TermSinglePos]
                                                          ) [ExprTermList]
                                                        ) [DesAssignNoErr]
                                                      ) [DesStmAssign]
                                                    ) [StatementDesignator]
                                                  ) [MultStatement]
                                                  StatementBreak(
                                                  ) [StatementBreak]
                                                ) [MultStatement]
                                                StatementContinue(
                                                ) [StatementContinue]
                                              ) [MultStatement]
                                              StatementSwitch(
                                                SwitchStart(
                                                ) [SwitchStart]
                                                ExprTermList(
                                                  TermSinglePos(
                                                    FactorSingle(
                                                      FactVar(
                                                        DesignatorSingle(
                                                         a
                                                        ) [DesignatorSingle]
                                                      ) [FactVar]
                                                    ) [FactorSingle]
                                                  ) [TermSinglePos]
                                                ) [ExprTermList]
                                                SwitchExpr(
                                                ) [SwitchExpr]
                                                CaseListParam(
                                                  CaseListEmpty(
                                                  ) [CaseListEmpty]
                                                  CaseParam(
                                                   1
                                                    CaseColon(
                                                    ) [CaseColon]
                                                    MultStatement(
                                                      NoStatementList(
                                                      ) [NoStatementList]
                                                      StatementBreak(
                                                      ) [StatementBreak]
                                                    ) [MultStatement]
                                                  ) [CaseParam]
                                                ) [CaseListParam]
                                              ) [StatementSwitch]
                                            ) [MultStatement]
                                            StatementWhile(
                                              DoStart(
                                              ) [DoStart]
                                              StatementMult(
                                                MultStatement(
                                                  MultStatement(
                                                    NoStatementList(
                                                    ) [NoStatementList]
                                                    StatementBreak(
                                                    ) [StatementBreak]
                                                  ) [MultStatement]
                                                  StatementContinue(
                                                  ) [StatementContinue]
                                                ) [MultStatement]
                                              ) [StatementMult]
                                              WhileCondStart(
                                              ) [WhileCondStart]
                                              ConditionSingle(
                                                CondTermSingle(
                                                  CondFactOp(
                                                    ExprTermList(
                                                      TermSinglePos(
                                                        FactorSingle(
                                                          FactVar(
                                                            DesignatorSingle(
                                                             a
                                                            ) [DesignatorSingle]
                                                          ) [FactVar]
                                                        ) [FactorSingle]
                                                      ) [TermSinglePos]
                                                    ) [ExprTermList]
                                                    RelLS(
                                                    ) [RelLS]
                                                    ExprTermList(
                                                      TermSinglePos(
                                                        FactorSingle(
                                                          FactorNum(
                                                           2
                                                          ) [FactorNum]
                                                        ) [FactorSingle]
                                                      ) [TermSinglePos]
                                                    ) [ExprTermList]
                                                  ) [CondFactOp]
                                                ) [CondTermSingle]
                                              ) [ConditionSingle]
                                            ) [StatementWhile]
                                          ) [MultStatement]
                                          StatementDesignator(
                                            DesStmAssign(
                                              DesignatorSingle(
                                               aClass
                                              ) [DesignatorSingle]
                                              Assignop(
                                              ) [Assignop]
                                              DesAssignNoErr(
                                                ExprTermList(
                                                  TermSinglePos(
                                                    FactorSingle(
                                                      FactorNew(
                                                        Type(
                                                         A
                                                        ) [Type]
                                                      ) [FactorNew]
                                                    ) [FactorSingle]
                                                  ) [TermSinglePos]
                                                ) [ExprTermList]
                                              ) [DesAssignNoErr]
                                            ) [DesStmAssign]
                                          ) [StatementDesignator]
                                        ) [MultStatement]
                                        StatementDesignator(
                                          DesStmAssign(
                                            DesignatorSingle(
                                             niz
                                            ) [DesignatorSingle]
                                            Assignop(
                                            ) [Assignop]
                                            DesAssignNoErr(
                                              ExprTermList(
                                                TermSinglePos(
                                                  FactorSingle(
                                                    FactorNewArr(
                                                      Type(
                                                       char
                                                      ) [Type]
                                                      ExprTermList(
                                                        TermSinglePos(
                                                          FactorSingle(
                                                            FactorNum(
                                                             2
                                                            ) [FactorNum]
                                                          ) [FactorSingle]
                                                        ) [TermSinglePos]
                                                      ) [ExprTermList]
                                                    ) [FactorNewArr]
                                                  ) [FactorSingle]
                                                ) [TermSinglePos]
                                              ) [ExprTermList]
                                            ) [DesAssignNoErr]
                                          ) [DesStmAssign]
                                        ) [StatementDesignator]
                                      ) [MultStatement]
                                      StatementRead(
                                        DesArr(
                                          DesignatorSingle(
                                           niz
                                          ) [DesignatorSingle]
                                          ExprTermList(
                                            TermSinglePos(
                                              FactorSingle(
                                                FactorNum(
                                                 0
                                                ) [FactorNum]
                                              ) [FactorSingle]
                                            ) [TermSinglePos]
                                          ) [ExprTermList]
                                        ) [DesArr]
                                      ) [StatementRead]
                                    ) [MultStatement]
                                    StatementRead(
                                      DesignatorSingle(
                                       b
                                      ) [DesignatorSingle]
                                    ) [StatementRead]
                                  ) [MultStatement]
                                  StatementRead(
                                    DesMember(
                                      DesignatorSingle(
                                       aClass
                                      ) [DesignatorSingle]
                                     x
                                    ) [DesMember]
                                  ) [StatementRead]
                                ) [MultStatement]
                                StatementRead(
                                  DesignatorSingle(
                                   aClass
                                  ) [DesignatorSingle]
                                ) [StatementRead]
                              ) [MultStatement]
                              StatementPrint(
                                ExprTermList(
                                  TermSinglePos(
                                    FactorSingle(
                                      FactVar(
                                        DesArr(
                                          DesignatorSingle(
                                           niz
                                          ) [DesignatorSingle]
                                          ExprTermList(
                                            TermSinglePos(
                                              FactorSingle(
                                                FactorNum(
                                                 0
                                                ) [FactorNum]
                                              ) [FactorSingle]
                                            ) [TermSinglePos]
                                          ) [ExprTermList]
                                        ) [DesArr]
                                      ) [FactVar]
                                    ) [FactorSingle]
                                  ) [TermSinglePos]
                                ) [ExprTermList]
                              ) [StatementPrint]
                            ) [MultStatement]
                            StatementPrint(
                              ExprTermList(
                                TermSinglePos(
                                  FactorSingle(
                                    FactVar(
                                      DesignatorSingle(
                                       b
                                      ) [DesignatorSingle]
                                    ) [FactVar]
                                  ) [FactorSingle]
                                ) [TermSinglePos]
                              ) [ExprTermList]
                            ) [StatementPrint]
                          ) [MultStatement]
                          StatementPrint(
                            ExprTermList(
                              TermSinglePos(
                                FactorSingle(
                                  FactVar(
                                    DesMember(
                                      DesignatorSingle(
                                       aClass
                                      ) [DesignatorSingle]
                                     x
                                    ) [DesMember]
                                  ) [FactVar]
                                ) [FactorSingle]
                              ) [TermSinglePos]
                            ) [ExprTermList]
                          ) [StatementPrint]
                        ) [MultStatement]
                        StatementPrint(
                          ExprTermList(
                            TermSinglePos(
                              FactorSingle(
                                FactVar(
                                  DesignatorSingle(
                                   aClass
                                  ) [DesignatorSingle]
                                ) [FactVar]
                              ) [FactorSingle]
                            ) [TermSinglePos]
                          ) [ExprTermList]
                        ) [StatementPrint]
                      ) [MultStatement]
                      StatementIf(
                        ConditionPar(
                          ConditionSingle(
                            CondTermSingle(
                              CondFactNoOp(
                                ExprTermList(
                                  TermSinglePos(
                                    FactorSingle(
                                      FactorNum(
                                       2
                                      ) [FactorNum]
                                    ) [FactorSingle]
                                  ) [TermSinglePos]
                                ) [ExprTermList]
                              ) [CondFactNoOp]
                            ) [CondTermSingle]
                          ) [ConditionSingle]
                        ) [ConditionPar]
                        IfOnlyStm(
                          StatementMult(
                            NoStatementList(
                            ) [NoStatementList]
                          ) [StatementMult]
                        ) [IfOnlyStm]
                      ) [StatementIf]
                    ) [MultStatement]
                    StatementIf(
                      ConditionPar(
                        ConditionSingle(
                          CondTermSingle(
                            CondFactNoOp(
                              ExprTermList(
                                TermSinglePos(
                                  FactorSingle(
                                    FactVar(
                                      DesignatorSingle(
                                       b
                                      ) [DesignatorSingle]
                                    ) [FactVar]
                                  ) [FactorSingle]
                                ) [TermSinglePos]
                              ) [ExprTermList]
                            ) [CondFactNoOp]
                          ) [CondTermSingle]
                        ) [ConditionSingle]
                      ) [ConditionPar]
                      IfOnlyStm(
                        StatementMult(
                          NoStatementList(
                          ) [NoStatementList]
                        ) [StatementMult]
                      ) [IfOnlyStm]
                    ) [StatementIf]
                  ) [MultStatement]
                  StatementWhile(
                    DoStart(
                    ) [DoStart]
                    StatementMult(
                      NoStatementList(
                      ) [NoStatementList]
                    ) [StatementMult]
                    WhileCondStart(
                    ) [WhileCondStart]
                    ConditionSingle(
                      CondTermSingle(
                        CondFactNoOp(
                          ExprTermList(
                            TermSinglePos(
                              FactorSingle(
                                FactorNum(
                                 2
                                ) [FactorNum]
                              ) [FactorSingle]
                            ) [TermSinglePos]
                          ) [ExprTermList]
                        ) [CondFactNoOp]
                      ) [CondTermSingle]
                    ) [ConditionSingle]
                  ) [StatementWhile]
                ) [MultStatement]
                StatementWhile(
                  DoStart(
                  ) [DoStart]
                  StatementMult(
                    NoStatementList(
                    ) [NoStatementList]
                  ) [StatementMult]
                  WhileCondStart(
                  ) [WhileCondStart]
                  ConditionSingle(
                    CondTermSingle(
                      CondFactNoOp(
                        ExprTermList(
                          TermSinglePos(
                            FactorSingle(
                              FactVar(
                                DesignatorSingle(
                                 b
                                ) [DesignatorSingle]
                              ) [FactVar]
                            ) [FactorSingle]
                          ) [TermSinglePos]
                        ) [ExprTermList]
                      ) [CondFactNoOp]
                    ) [CondTermSingle]
                  ) [ConditionSingle]
                ) [StatementWhile]
              ) [MultStatement]
              StatementSwitch(
                SwitchStart(
                ) [SwitchStart]
                ExprTermList(
                  TermSinglePos(
                    FactorSingle(
                      FactVar(
                        DesignatorSingle(
                         b
                        ) [DesignatorSingle]
                      ) [FactVar]
                    ) [FactorSingle]
                  ) [TermSinglePos]
                ) [ExprTermList]
                SwitchExpr(
                ) [SwitchExpr]
                CaseListParam(
                  CaseListParam(
                    CaseListEmpty(
                    ) [CaseListEmpty]
                    CaseParam(
                     1
                      CaseColon(
                      ) [CaseColon]
                      MultStatement(
                        NoStatementList(
                        ) [NoStatementList]
                        StatementBreak(
                        ) [StatementBreak]
                      ) [MultStatement]
                    ) [CaseParam]
                  ) [CaseListParam]
                  CaseParam(
                   2
                    CaseColon(
                    ) [CaseColon]
                    MultStatement(
                      NoStatementList(
                      ) [NoStatementList]
                      StatementBreak(
                      ) [StatementBreak]
                    ) [MultStatement]
                  ) [CaseParam]
                ) [CaseListParam]
              ) [StatementSwitch]
            ) [MultStatement]
            StatementSwitch(
              SwitchStart(
              ) [SwitchStart]
              ExprTermList(
                TermSinglePos(
                  FactorSingle(
                    FactorNum(
                     2
                    ) [FactorNum]
                  ) [FactorSingle]
                ) [TermSinglePos]
              ) [ExprTermList]
              SwitchExpr(
              ) [SwitchExpr]
              CaseListParam(
                CaseListParam(
                  CaseListEmpty(
                  ) [CaseListEmpty]
                  CaseParam(
                   1
                    CaseColon(
                    ) [CaseColon]
                    MultStatement(
                      NoStatementList(
                      ) [NoStatementList]
                      StatementBreak(
                      ) [StatementBreak]
                    ) [MultStatement]
                  ) [CaseParam]
                ) [CaseListParam]
                CaseParam(
                 1
                  CaseColon(
                  ) [CaseColon]
                  MultStatement(
                    NoStatementList(
                    ) [NoStatementList]
                    StatementBreak(
                    ) [StatementBreak]
                  ) [MultStatement]
                ) [CaseParam]
              ) [CaseListParam]
            ) [StatementSwitch]
          ) [MultStatement]
          StatementDesignator(
            DesStmActPar(
              DesignatorSingle(
               fun
              ) [DesignatorSingle]
              ActParsSingle(
                ExprTermList(
                  TermSinglePos(
                    FactorSingle(
                      FactVar(
                        DesignatorSingle(
                         a
                        ) [DesignatorSingle]
                      ) [FactVar]
                    ) [FactorSingle]
                  ) [TermSinglePos]
                ) [ExprTermList]
              ) [ActParsSingle]
            ) [DesStmActPar]
          ) [StatementDesignator]
        ) [MultStatement]
        StatementDesignator(
          DesStmActPar(
            DesignatorSingle(
             fun
            ) [DesignatorSingle]
            ActParsList(
              ActParsList(
                ActParsSingle(
                  ExprTermList(
                    TermSinglePos(
                      FactorSingle(
                        FactVar(
                          DesignatorSingle(
                           a
                          ) [DesignatorSingle]
                        ) [FactVar]
                      ) [FactorSingle]
                    ) [TermSinglePos]
                  ) [ExprTermList]
                ) [ActParsSingle]
                ExprTermList(
                  TermSinglePos(
                    FactorSingle(
                      FactVar(
                        DesignatorSingle(
                         aClass
                        ) [DesignatorSingle]
                      ) [FactVar]
                    ) [FactorSingle]
                  ) [TermSinglePos]
                ) [ExprTermList]
              ) [ActParsList]
              ExprTermList(
                TermSinglePos(
                  FactorSingle(
                    FactVar(
                      DesignatorSingle(
                       b
                      ) [DesignatorSingle]
                    ) [FactVar]
                  ) [FactorSingle]
                ) [TermSinglePos]
              ) [ExprTermList]
            ) [ActParsList]
          ) [DesStmActPar]
        ) [StatementDesignator]
      ) [MultStatement]
    ) [MethodDecPar]
  ) [MethodDeclUse]
) [Program]
INFO  15:43:16,606 - ===================================
ERROR 15:43:16,617 - Greska kod return expr. Rezultat izraza nije ekvivalentan tipu rezultata funkcije na liniji 15
ERROR 15:43:16,617 - Greska formalni parametar a je vec deklarisan na liniji 18
INFO  15:43:16,618 - Pristup globalnoj promenljivi (a) | Var a: int, 0, 0  na liniji 29
ERROR 15:43:16,618 - Greska break iskaz  se moze koristiti samo unutar do-while petlje i visestrukog grananja (switch)
ERROR 15:43:16,618 - Greska continue iskaz  se moze koristiti samo unutar do-while petlje 
INFO  15:43:16,618 - Pristup globalnoj promenljivi (a) | Var a: int, 0, 0  na liniji 33
INFO  15:43:16,619 - Koristi se promenljiva (a) | Var a: int, 0, 0  na liniji 33
INFO  15:43:16,624 - Pristup globalnoj promenljivi (a) | Var a: int, 0, 0  na liniji 40
INFO  15:43:16,625 - Koristi se promenljiva (a) | Var a: int, 0, 0  na liniji 40
INFO  15:43:16,625 - Pristup lokalnoj promenljivi (aClass) | Var aClass: Class A , 0, 1  na liniji 42
INFO  15:43:16,625 - Alocira se memorija za objekat klase (A) | Type A: Class A , 0, 0  na liniji 42
INFO  15:43:16,626 - Pristup lokalnoj promenljivi (niz) | Var niz: Arr of char, 1, 1  na liniji 43
INFO  15:43:16,626 - Alocira se memorija za niz tipa (char) | Type char: char, -1, -1  na liniji 43
INFO  15:43:16,626 - Pristup lokalnoj promenljivi (niz) | Var niz: Arr of char, 1, 1  na liniji 46
INFO  15:43:16,626 - Pristupa se clanu niza (niz) | Var niz: Arr of char, 1, 1  na liniji 46
INFO  15:43:16,627 - Pristup globalnoj promenljivi (b) | Var b: bool, 1, 0  na liniji 47
INFO  15:43:16,627 - Pristup lokalnoj promenljivi (aClass) | Var aClass: Class A , 0, 1  na liniji 48
INFO  15:43:16,627 - Pristup polju (x) | Fld x: int, 1, 1  na liniji 48
INFO  15:43:16,627 - Pristup lokalnoj promenljivi (aClass) | Var aClass: Class A , 0, 1  na liniji 49
ERROR 15:43:16,627 - Greska kod read. Ne moze da se smesti vrednost u simbol koji  nije tipa int,char ili bool na liniji 49
INFO  15:43:16,627 - Pristup lokalnoj promenljivi (niz) | Var niz: Arr of char, 1, 1  na liniji 52
INFO  15:43:16,628 - Pristupa se clanu niza (niz) | Var niz: Arr of char, 1, 1  na liniji 52
INFO  15:43:16,628 - Koristi se promenljiva (Elem:niz) | Elem:niz: char, -1, -1  na liniji 52
INFO  15:43:16,628 - Pristup globalnoj promenljivi (b) | Var b: bool, 1, 0  na liniji 53
INFO  15:43:16,628 - Koristi se promenljiva (b) | Var b: bool, 1, 0  na liniji 53
INFO  15:43:16,628 - Pristup lokalnoj promenljivi (aClass) | Var aClass: Class A , 0, 1  na liniji 54
INFO  15:43:16,628 - Pristup polju (x) | Fld x: int, 1, 1  na liniji 54
INFO  15:43:16,628 - Koristi se promenljiva (x) | Fld x: int, 1, 1  na liniji 54
INFO  15:43:16,632 - Pristup lokalnoj promenljivi (aClass) | Var aClass: Class A , 0, 1  na liniji 55
INFO  15:43:16,632 - Koristi se promenljiva (aClass) | Var aClass: Class A , 0, 1  na liniji 55
ERROR 15:43:16,633 - Greska kod print loop. Symbol koji treba da se ispise nije tipa int,char ili bool na liniji 55
ERROR 15:43:16,633 - Greska faktor kada nema relacioni operator mora biti tipa bool na liniji 59
INFO  15:43:16,633 - Pristup globalnoj promenljivi (b) | Var b: bool, 1, 0  na liniji 62
INFO  15:43:16,633 - Koristi se promenljiva (b) | Var b: bool, 1, 0  na liniji 62
ERROR 15:43:16,634 - Greska faktor kada nema relacioni operator mora biti tipa bool na liniji 66
INFO  15:43:16,634 - Pristup globalnoj promenljivi (b) | Var b: bool, 1, 0  na liniji 69
INFO  15:43:16,634 - Koristi se promenljiva (b) | Var b: bool, 1, 0  na liniji 69
INFO  15:43:16,634 - Pristup globalnoj promenljivi (b) | Var b: bool, 1, 0  na liniji 74
INFO  15:43:16,634 - Koristi se promenljiva (b) | Var b: bool, 1, 0  na liniji 74
ERROR 15:43:16,634 - Greska izraz kod switch-a treba da bude celobrojnog tipa na liniji 74
ERROR 15:43:16,634 - Greska grana sa celobrojnom konstantom (1) vec postoji na liniji 12
INFO  15:43:16,635 - Pristup globalnoj funkciji (fun) | Meth fun: int, 0, 3  na liniji 86
INFO  15:43:16,635 - Pristup globalnoj promenljivi (a) | Var a: int, 0, 0  na liniji 86
INFO  15:43:16,635 - Koristi se promenljiva (a) | Var a: int, 0, 0  na liniji 86
ERROR 15:43:16,638 - Greska funkcija (fun)  prihvata 3 parametara, dato je 1 na liniji 86
INFO  15:43:16,638 - Pristup globalnoj funkciji (fun) | Meth fun: int, 0, 3  na liniji 87
INFO  15:43:16,638 - Pristup globalnoj promenljivi (a) | Var a: int, 0, 0  na liniji 87
INFO  15:43:16,638 - Koristi se promenljiva (a) | Var a: int, 0, 0  na liniji 87
INFO  15:43:16,639 - Pristup lokalnoj promenljivi (aClass) | Var aClass: Class A , 0, 1  na liniji 87
INFO  15:43:16,639 - Koristi se promenljiva (aClass) | Var aClass: Class A , 0, 1  na liniji 87
INFO  15:43:16,639 - Pristup globalnoj promenljivi (b) | Var b: bool, 1, 0  na liniji 87
INFO  15:43:16,639 - Koristi se promenljiva (b) | Var b: bool, 1, 0  na liniji 87
ERROR 15:43:16,639 - Greska parametar (c) redni broj (3) nije kompatabilan sa pravim parametrom na liniji 87
INFO  15:43:16,640 - ===================================
ERROR 15:43:16,649 - Parsiranje NIJE uspesno zavrseno!
