INFO  15:45:14,573 - Compiling source file: C:\Users\jovan\OneDrive\Desktop\ETF HELL\77777 SEMESTAR\prevodioci\projekat\workspace\MJCompiler\test\syn_test\syntax_error2.mj
INFO  15:45:14,909 - #2 program
INFO  15:45:14,910 - #49 SyntaxErr
INFO  15:45:14,911 - #49 int
INFO  15:45:14,916 - #49 a
INFO  15:45:14,919 - #7 ;
INFO  15:45:14,920 - #49 bool
INFO  15:45:14,923 - #49 b
INFO  15:45:14,923 - #7 ;
INFO  15:45:14,924 - #43 class
INFO  15:45:14,924 - #49 A
INFO  15:45:14,924 - #3 {
INFO  15:45:14,927 - #49 int
INFO  15:45:14,935 - #49 x
INFO  15:45:14,935 - #7 ;
INFO  15:45:14,935 - #3 {
INFO  15:45:14,936 - #44 void
INFO  15:45:14,939 - #49 main
INFO  15:45:14,942 - #12 (
INFO  15:45:14,944 - #13 )
INFO  15:45:14,945 - #3 {
INFO  15:45:14,954 - #4 }
INFO  15:45:14,956 - #4 }
INFO  15:45:14,960 - #4 }
INFO  15:45:14,961 - #3 {
INFO  15:45:14,961 - #49 int
INFO  15:45:14,961 - #49 test
INFO  15:45:14,962 - #12 (
INFO  15:45:14,962 - #13 )
INFO  15:45:14,962 - #3 {
INFO  15:45:14,963 - #24 return
INFO  15:45:14,963 - #48 a
INFO  15:45:14,963 - #7 ;
INFO  15:45:14,964 - #4 }
INFO  15:45:14,965 - #49 int
INFO  15:45:14,965 - #49 funErr
INFO  15:45:14,965 - #12 (
INFO  15:45:14,967 - #49 int
INFO  15:45:14,968 - #49 a
INFO  15:45:14,968 - #8 ,
INFO  15:45:14,969 - #49 A
INFO  15:45:14,969 - #49 a
INFO  15:45:14,969 - #8 ,
INFO  15:45:14,970 - #49 char
INFO  15:45:14,970 - #49 c
INFO  15:45:14,970 - #13 )
INFO  15:45:14,970 - #3 {
INFO  15:45:14,971 - #4 }
INFO  15:45:14,971 - #49 int
INFO  15:45:14,971 - #49 fun
INFO  15:45:14,971 - #12 (
INFO  15:45:14,971 - #49 int
INFO  15:45:14,972 - #49 a
INFO  15:45:14,972 - #8 ,
INFO  15:45:14,972 - #49 A
INFO  15:45:14,972 - #49 b
INFO  15:45:14,972 - #8 ,
INFO  15:45:14,973 - #49 char
INFO  15:45:14,973 - #49 c
INFO  15:45:14,973 - #13 )
INFO  15:45:14,973 - #3 {
INFO  15:45:14,974 - #4 }
INFO  15:45:14,974 - #44 void
INFO  15:45:14,974 - #49 main
INFO  15:45:14,974 - #12 (
INFO  15:45:14,974 - #13 )
INFO  15:45:14,977 - #49 A
INFO  15:45:14,977 - #49 aClass
INFO  15:45:14,977 - #7 ;
INFO  15:45:14,978 - #49 char
INFO  15:45:14,982 - #49 niz
INFO  15:45:14,983 - #9 [
INFO  15:45:14,983 - #10 ]
INFO  15:45:14,983 - #7 ;
INFO  15:45:14,983 - #3 {
INFO  15:45:14,984 - #49 a
INFO  15:45:14,984 - #6 =
INFO  15:45:14,984 - #46 2
INFO  15:45:14,987 - #7 ;
INFO  15:45:14,988 - #22 break
INFO  15:45:14,989 - #7 ;
INFO  15:45:14,989 - #23 continue
INFO  15:45:14,999 - #7 ;
INFO  15:45:14,999 - #20 switch
INFO  15:45:15,002 - #12 (
INFO  15:45:15,005 - #49 a
INFO  15:45:15,006 - #13 )
INFO  15:45:15,006 - #3 {
INFO  15:45:15,009 - #21 case
INFO  15:45:15,011 - #46 1
INFO  15:45:15,012 - #45 :
INFO  15:45:15,012 - #22 break
INFO  15:45:15,015 - #7 ;
INFO  15:45:15,015 - #4 }
INFO  15:45:15,019 - #18 do
INFO  15:45:15,019 - #3 {
INFO  15:45:15,022 - #22 break
INFO  15:45:15,022 - #7 ;
INFO  15:45:15,022 - #23 continue
INFO  15:45:15,022 - #7 ;
INFO  15:45:15,023 - #4 }
INFO  15:45:15,023 - #19 while
INFO  15:45:15,023 - #12 (
INFO  15:45:15,026 - #49 a
INFO  15:45:15,027 - #36 <
INFO  15:45:15,027 - #46 2
INFO  15:45:15,033 - #13 )
INFO  15:45:15,034 - #7 ;
INFO  15:45:15,034 - #49 aClass
INFO  15:45:15,034 - #6 =
INFO  15:45:15,035 - #30 new
INFO  15:45:15,035 - #49 A
INFO  15:45:15,035 - #7 ;
INFO  15:45:15,035 - #49 niz
INFO  15:45:15,037 - #6 =
INFO  15:45:15,037 - #30 new
INFO  15:45:15,038 - #49 char
INFO  15:45:15,038 - #9 [
INFO  15:45:15,038 - #46 2
INFO  15:45:15,039 - #10 ]
INFO  15:45:15,039 - #7 ;
INFO  15:45:15,039 - #25 read
INFO  15:45:15,040 - #12 (
INFO  15:45:15,040 - #49 niz
INFO  15:45:15,040 - #9 [
INFO  15:45:15,040 - #46 0
INFO  15:45:15,040 - #10 ]
INFO  15:45:15,041 - #13 )
INFO  15:45:15,041 - #7 ;
INFO  15:45:15,041 - #25 read
INFO  15:45:15,042 - #12 (
INFO  15:45:15,042 - #49 b
INFO  15:45:15,042 - #13 )
INFO  15:45:15,042 - #7 ;
INFO  15:45:15,042 - #25 read
INFO  15:45:15,042 - #12 (
INFO  15:45:15,043 - #49 aClass
INFO  15:45:15,043 - #31 .
INFO  15:45:15,043 - #49 x
INFO  15:45:15,043 - #13 )
INFO  15:45:15,043 - #7 ;
INFO  15:45:15,044 - #25 read
INFO  15:45:15,044 - #12 (
INFO  15:45:15,044 - #49 aClass
INFO  15:45:15,044 - #13 )
INFO  15:45:15,044 - #7 ;
INFO  15:45:15,044 - #26 print
INFO  15:45:15,045 - #12 (
INFO  15:45:15,045 - #49 niz
INFO  15:45:15,045 - #9 [
INFO  15:45:15,045 - #46 0
INFO  15:45:15,045 - #10 ]
INFO  15:45:15,045 - #13 )
INFO  15:45:15,049 - #7 ;
INFO  15:45:15,049 - #26 print
INFO  15:45:15,049 - #12 (
INFO  15:45:15,050 - #49 b
INFO  15:45:15,050 - #13 )
INFO  15:45:15,050 - #7 ;
INFO  15:45:15,050 - #26 print
INFO  15:45:15,051 - #12 (
INFO  15:45:15,051 - #49 aClass
INFO  15:45:15,051 - #31 .
INFO  15:45:15,051 - #49 x
INFO  15:45:15,051 - #13 )
INFO  15:45:15,052 - #7 ;
INFO  15:45:15,052 - #26 print
INFO  15:45:15,052 - #12 (
INFO  15:45:15,052 - #49 aClass
INFO  15:45:15,052 - #13 )
INFO  15:45:15,053 - #7 ;
INFO  15:45:15,053 - #14 if
INFO  15:45:15,053 - #12 (
INFO  15:45:15,053 - #46 2
INFO  15:45:15,053 - #13 )
INFO  15:45:15,053 - #3 {
INFO  15:45:15,054 - #4 }
INFO  15:45:15,054 - #14 if
INFO  15:45:15,057 - #12 (
INFO  15:45:15,059 - #49 b
INFO  15:45:15,059 - #13 )
INFO  15:45:15,059 - #3 {
INFO  15:45:15,059 - #4 }
INFO  15:45:15,060 - #18 do
INFO  15:45:15,060 - #3 {
INFO  15:45:15,060 - #4 }
INFO  15:45:15,060 - #19 while
INFO  15:45:15,060 - #12 (
INFO  15:45:15,061 - #46 2
INFO  15:45:15,061 - #13 )
INFO  15:45:15,061 - #7 ;
INFO  15:45:15,061 - #18 do
INFO  15:45:15,061 - #3 {
INFO  15:45:15,061 - #4 }
INFO  15:45:15,062 - #19 while
INFO  15:45:15,062 - #12 (
INFO  15:45:15,062 - #49 b
INFO  15:45:15,062 - #13 )
INFO  15:45:15,062 - #7 ;
INFO  15:45:15,063 - #20 switch
INFO  15:45:15,063 - #12 (
INFO  15:45:15,063 - #49 b
INFO  15:45:15,063 - #13 )
INFO  15:45:15,064 - #3 {
INFO  15:45:15,064 - #21 case
INFO  15:45:15,064 - #46 1
INFO  15:45:15,064 - #45 :
INFO  15:45:15,065 - #22 break
INFO  15:45:15,065 - #7 ;
INFO  15:45:15,065 - #21 case
INFO  15:45:15,065 - #46 2
INFO  15:45:15,065 - #45 :
INFO  15:45:15,065 - #22 break
INFO  15:45:15,065 - #7 ;
INFO  15:45:15,065 - #4 }
INFO  15:45:15,065 - #20 switch
INFO  15:45:15,065 - #12 (
INFO  15:45:15,065 - #46 2
INFO  15:45:15,065 - #13 )
INFO  15:45:15,066 - #3 {
INFO  15:45:15,066 - #21 case
INFO  15:45:15,066 - #46 1
INFO  15:45:15,066 - #45 :
INFO  15:45:15,066 - #22 break
INFO  15:45:15,066 - #7 ;
INFO  15:45:15,067 - #21 case
INFO  15:45:15,069 - #46 1
INFO  15:45:15,069 - #45 :
INFO  15:45:15,069 - #22 break
INFO  15:45:15,070 - #7 ;
INFO  15:45:15,070 - #4 }
INFO  15:45:15,070 - #49 fun
INFO  15:45:15,070 - #12 (
INFO  15:45:15,071 - #49 a
INFO  15:45:15,071 - #13 )
INFO  15:45:15,071 - #7 ;
INFO  15:45:15,073 - #49 fun
INFO  15:45:15,073 - #12 (
INFO  15:45:15,073 - #49 a
INFO  15:45:15,074 - #8 ,
INFO  15:45:15,074 - #49 aClass
INFO  15:45:15,074 - #8 ,
INFO  15:45:15,074 - #49 b
INFO  15:45:15,075 - #13 )
INFO  15:45:15,075 - #7 ;
INFO  15:45:15,075 - #49 fun
INFO  15:45:15,075 - #12 (
INFO  15:45:15,075 - #49 a
INFO  15:45:15,075 - #8 ,
INFO  15:45:15,075 - #49 aClass
INFO  15:45:15,075 - #8 ,
INFO  15:45:15,075 - #49 niz
INFO  15:45:15,077 - #9 [
INFO  15:45:15,077 - #46 0
INFO  15:45:15,077 - #10 ]
INFO  15:45:15,077 - #13 )
INFO  15:45:15,077 - #7 ;
INFO  15:45:15,077 - #14 if
INFO  15:45:15,077 - #12 (
INFO  15:45:15,077 - #49 aClass
INFO  15:45:15,077 - #32 ==
INFO  15:45:15,077 - #30 new
INFO  15:45:15,082 - #49 A
INFO  15:45:15,082 - #13 )
INFO  15:45:15,082 - #3 {
INFO  15:45:15,082 - #4 }
INFO  15:45:15,083 - #4 }
INFO  15:45:15,083 - #4 }
INFO  15:45:15,095 - Program(
  ProgName(
   SyntaxErr
  ) [ProgName]
  MultDecl(
    MultDecl(
      MultDecl(
        NoDecl(
        ) [NoDecl]
        DecVar(
          GlobalVarDecl(
            Type(
             int
            ) [Type]
            GlobalSingleVar(
              GlobalVarSemi(
                VarParamNoBrack(
                 a
                ) [VarParamNoBrack]
              ) [GlobalVarSemi]
            ) [GlobalSingleVar]
          ) [GlobalVarDecl]
        ) [DecVar]
      ) [MultDecl]
      DecVar(
        GlobalVarDecl(
          Type(
           bool
          ) [Type]
          GlobalSingleVar(
            GlobalVarSemi(
              VarParamNoBrack(
               b
              ) [VarParamNoBrack]
            ) [GlobalVarSemi]
          ) [GlobalSingleVar]
        ) [GlobalVarDecl]
      ) [DecVar]
    ) [MultDecl]
    DecClass(
      ClassDeclMeth(
        ClassName(
         A
        ) [ClassName]
        NoExtendType(
        ) [NoExtendType]
        ClassVarDeclUse(
          NoClassVarDecl(
          ) [NoClassVarDecl]
          ClassVarDeclNoErr(
            Type(
             int
            ) [Type]
            SingleVar(
              VarParamNoBrack(
               x
              ) [VarParamNoBrack]
            ) [SingleVar]
          ) [ClassVarDeclNoErr]
        ) [ClassVarDeclUse]
        MethodDeclUse(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecPar(
            MethodTypeName(
              MethVoid(
              ) [MethVoid]
             main
            ) [MethodTypeName]
            NoFormParList(
            ) [NoFormParList]
            MethodLocal(
              NoVarDecl(
              ) [NoVarDecl]
            ) [MethodLocal]
            NoStatementList(
            ) [NoStatementList]
          ) [MethodDecPar]
        ) [MethodDeclUse]
      ) [ClassDeclMeth]
    ) [DecClass]
  ) [MultDecl]
  MethodDeclUse(
    MethodDeclUse(
      MethodDeclUse(
        MethodDeclUse(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecPar(
            MethodTypeName(
              MethType(
                Type(
                 int
                ) [Type]
              ) [MethType]
             test
            ) [MethodTypeName]
            NoFormParList(
            ) [NoFormParList]
            MethodLocal(
              NoVarDecl(
              ) [NoVarDecl]
            ) [MethodLocal]
            MultStatement(
              NoStatementList(
              ) [NoStatementList]
              StatementRetExpr(
                ExprTermList(
                  TermSinglePos(
                    FactorSingle(
                      FactorChar(
                       a
                      ) [FactorChar]
                    ) [FactorSingle]
                  ) [TermSinglePos]
                ) [ExprTermList]
              ) [StatementRetExpr]
            ) [MultStatement]
          ) [MethodDecPar]
        ) [MethodDeclUse]
        MethodDecPar(
          MethodTypeName(
            MethType(
              Type(
               int
              ) [Type]
            ) [MethType]
           funErr
          ) [MethodTypeName]
          FormParListUse(
            FormParMult(
              FormParametarComma(
                FormParNoBrack(
                  Type(
                   int
                  ) [Type]
                 a
                ) [FormParNoBrack]
              ) [FormParametarComma]
              FormParMult(
                FormParametarComma(
                  FormParNoBrack(
                    Type(
                     A
                    ) [Type]
                   a
                  ) [FormParNoBrack]
                ) [FormParametarComma]
                FormParSingle(
                  FormParamNoError(
                    FormParNoBrack(
                      Type(
                       char
                      ) [Type]
                     c
                    ) [FormParNoBrack]
                  ) [FormParamNoError]
                ) [FormParSingle]
              ) [FormParMult]
            ) [FormParMult]
          ) [FormParListUse]
          MethodLocal(
            NoVarDecl(
            ) [NoVarDecl]
          ) [MethodLocal]
          NoStatementList(
          ) [NoStatementList]
        ) [MethodDecPar]
      ) [MethodDeclUse]
      MethodDecPar(
        MethodTypeName(
          MethType(
            Type(
             int
            ) [Type]
          ) [MethType]
         fun
        ) [MethodTypeName]
        FormParListUse(
          FormParMult(
            FormParametarComma(
              FormParNoBrack(
                Type(
                 int
                ) [Type]
               a
              ) [FormParNoBrack]
            ) [FormParametarComma]
            FormParMult(
              FormParametarComma(
                FormParNoBrack(
                  Type(
                   A
                  ) [Type]
                 b
                ) [FormParNoBrack]
              ) [FormParametarComma]
              FormParSingle(
                FormParamNoError(
                  FormParNoBrack(
                    Type(
                     char
                    ) [Type]
                   c
                  ) [FormParNoBrack]
                ) [FormParamNoError]
              ) [FormParSingle]
            ) [FormParMult]
          ) [FormParMult]
        ) [FormParListUse]
        MethodLocal(
          NoVarDecl(
          ) [NoVarDecl]
        ) [MethodLocal]
        NoStatementList(
        ) [NoStatementList]
      ) [MethodDecPar]
    ) [MethodDeclUse]
    MethodDecPar(
      MethodTypeName(
        MethVoid(
        ) [MethVoid]
       main
      ) [MethodTypeName]
      NoFormParList(
      ) [NoFormParList]
      MethodLocal(
        VarDeclUse(
          VarDeclUse(
            NoVarDecl(
            ) [NoVarDecl]
            VarDecl(
              Type(
               A
              ) [Type]
              SingleVar(
                VarParamNoBrack(
                 aClass
                ) [VarParamNoBrack]
              ) [SingleVar]
            ) [VarDecl]
          ) [VarDeclUse]
          VarDecl(
            Type(
             char
            ) [Type]
            SingleVar(
              VarParamBrack(
               niz
              ) [VarParamBrack]
            ) [SingleVar]
          ) [VarDecl]
        ) [VarDeclUse]
      ) [MethodLocal]
      MultStatement(
        MultStatement(
          MultStatement(
            MultStatement(
              MultStatement(
                MultStatement(
                  MultStatement(
                    MultStatement(
                      MultStatement(
                        MultStatement(
                          MultStatement(
                            MultStatement(
                              MultStatement(
                                MultStatement(
                                  MultStatement(
                                    MultStatement(
                                      MultStatement(
                                        MultStatement(
                                          MultStatement(
                                            MultStatement(
                                              MultStatement(
                                                MultStatement(
                                                  MultStatement(
                                                    MultStatement(
                                                      MultStatement(
                                                        NoStatementList(
                                                        ) [NoStatementList]
                                                        StatementDesignator(
                                                          DesStmAssign(
                                                            DesignatorSingle(
                                                             a
                                                            ) [DesignatorSingle]
                                                            Assignop(
                                                            ) [Assignop]
                                                            DesAssignNoErr(
                                                              ExprTermList(
                                                                TermSinglePos(
                                                                  FactorSingle(
                                                                    FactorNum(
                                                                     2
                                                                    ) [FactorNum]
                                                                  ) [FactorSingle]
                                                                ) [TermSinglePos]
                                                              ) [ExprTermList]
                                                            ) [DesAssignNoErr]
                                                          ) [DesStmAssign]
                                                        ) [StatementDesignator]
                                                      ) [MultStatement]
                                                      StatementBreak(
                                                      ) [StatementBreak]
                                                    ) [MultStatement]
                                                    StatementContinue(
                                                    ) [StatementContinue]
                                                  ) [MultStatement]
                                                  StatementSwitch(
                                                    SwitchStart(
                                                    ) [SwitchStart]
                                                    ExprTermList(
                                                      TermSinglePos(
                                                        FactorSingle(
                                                          FactVar(
                                                            DesignatorSingle(
                                                             a
                                                            ) [DesignatorSingle]
                                                          ) [FactVar]
                                                        ) [FactorSingle]
                                                      ) [TermSinglePos]
                                                    ) [ExprTermList]
                                                    SwitchExpr(
                                                    ) [SwitchExpr]
                                                    CaseListParam(
                                                      CaseListEmpty(
                                                      ) [CaseListEmpty]
                                                      CaseParam(
                                                       1
                                                        CaseColon(
                                                        ) [CaseColon]
                                                        MultStatement(
                                                          NoStatementList(
                                                          ) [NoStatementList]
                                                          StatementBreak(
                                                          ) [StatementBreak]
                                                        ) [MultStatement]
                                                      ) [CaseParam]
                                                    ) [CaseListParam]
                                                  ) [StatementSwitch]
                                                ) [MultStatement]
                                                StatementWhile(
                                                  DoStart(
                                                  ) [DoStart]
                                                  StatementMult(
                                                    MultStatement(
                                                      MultStatement(
                                                        NoStatementList(
                                                        ) [NoStatementList]
                                                        StatementBreak(
                                                        ) [StatementBreak]
                                                      ) [MultStatement]
                                                      StatementContinue(
                                                      ) [StatementContinue]
                                                    ) [MultStatement]
                                                  ) [StatementMult]
                                                  WhileCondStart(
                                                  ) [WhileCondStart]
                                                  ConditionSingle(
                                                    CondTermSingle(
                                                      CondFactOp(
                                                        ExprTermList(
                                                          TermSinglePos(
                                                            FactorSingle(
                                                              FactVar(
                                                                DesignatorSingle(
                                                                 a
                                                                ) [DesignatorSingle]
                                                              ) [FactVar]
                                                            ) [FactorSingle]
                                                          ) [TermSinglePos]
                                                        ) [ExprTermList]
                                                        RelLS(
                                                        ) [RelLS]
                                                        ExprTermList(
                                                          TermSinglePos(
                                                            FactorSingle(
                                                              FactorNum(
                                                               2
                                                              ) [FactorNum]
                                                            ) [FactorSingle]
                                                          ) [TermSinglePos]
                                                        ) [ExprTermList]
                                                      ) [CondFactOp]
                                                    ) [CondTermSingle]
                                                  ) [ConditionSingle]
                                                ) [StatementWhile]
                                              ) [MultStatement]
                                              StatementDesignator(
                                                DesStmAssign(
                                                  DesignatorSingle(
                                                   aClass
                                                  ) [DesignatorSingle]
                                                  Assignop(
                                                  ) [Assignop]
                                                  DesAssignNoErr(
                                                    ExprTermList(
                                                      TermSinglePos(
                                                        FactorSingle(
                                                          FactorNew(
                                                            Type(
                                                             A
                                                            ) [Type]
                                                          ) [FactorNew]
                                                        ) [FactorSingle]
                                                      ) [TermSinglePos]
                                                    ) [ExprTermList]
                                                  ) [DesAssignNoErr]
                                                ) [DesStmAssign]
                                              ) [StatementDesignator]
                                            ) [MultStatement]
                                            StatementDesignator(
                                              DesStmAssign(
                                                DesignatorSingle(
                                                 niz
                                                ) [DesignatorSingle]
                                                Assignop(
                                                ) [Assignop]
                                                DesAssignNoErr(
                                                  ExprTermList(
                                                    TermSinglePos(
                                                      FactorSingle(
                                                        FactorNewArr(
                                                          Type(
                                                           char
                                                          ) [Type]
                                                          ExprTermList(
                                                            TermSinglePos(
                                                              FactorSingle(
                                                                FactorNum(
                                                                 2
                                                                ) [FactorNum]
                                                              ) [FactorSingle]
                                                            ) [TermSinglePos]
                                                          ) [ExprTermList]
                                                        ) [FactorNewArr]
                                                      ) [FactorSingle]
                                                    ) [TermSinglePos]
                                                  ) [ExprTermList]
                                                ) [DesAssignNoErr]
                                              ) [DesStmAssign]
                                            ) [StatementDesignator]
                                          ) [MultStatement]
                                          StatementRead(
                                            DesArr(
                                              DesignatorSingle(
                                               niz
                                              ) [DesignatorSingle]
                                              ExprTermList(
                                                TermSinglePos(
                                                  FactorSingle(
                                                    FactorNum(
                                                     0
                                                    ) [FactorNum]
                                                  ) [FactorSingle]
                                                ) [TermSinglePos]
                                              ) [ExprTermList]
                                            ) [DesArr]
                                          ) [StatementRead]
                                        ) [MultStatement]
                                        StatementRead(
                                          DesignatorSingle(
                                           b
                                          ) [DesignatorSingle]
                                        ) [StatementRead]
                                      ) [MultStatement]
                                      StatementRead(
                                        DesMember(
                                          DesignatorSingle(
                                           aClass
                                          ) [DesignatorSingle]
                                         x
                                        ) [DesMember]
                                      ) [StatementRead]
                                    ) [MultStatement]
                                    StatementRead(
                                      DesignatorSingle(
                                       aClass
                                      ) [DesignatorSingle]
                                    ) [StatementRead]
                                  ) [MultStatement]
                                  StatementPrint(
                                    ExprTermList(
                                      TermSinglePos(
                                        FactorSingle(
                                          FactVar(
                                            DesArr(
                                              DesignatorSingle(
                                               niz
                                              ) [DesignatorSingle]
                                              ExprTermList(
                                                TermSinglePos(
                                                  FactorSingle(
                                                    FactorNum(
                                                     0
                                                    ) [FactorNum]
                                                  ) [FactorSingle]
                                                ) [TermSinglePos]
                                              ) [ExprTermList]
                                            ) [DesArr]
                                          ) [FactVar]
                                        ) [FactorSingle]
                                      ) [TermSinglePos]
                                    ) [ExprTermList]
                                  ) [StatementPrint]
                                ) [MultStatement]
                                StatementPrint(
                                  ExprTermList(
                                    TermSinglePos(
                                      FactorSingle(
                                        FactVar(
                                          DesignatorSingle(
                                           b
                                          ) [DesignatorSingle]
                                        ) [FactVar]
                                      ) [FactorSingle]
                                    ) [TermSinglePos]
                                  ) [ExprTermList]
                                ) [StatementPrint]
                              ) [MultStatement]
                              StatementPrint(
                                ExprTermList(
                                  TermSinglePos(
                                    FactorSingle(
                                      FactVar(
                                        DesMember(
                                          DesignatorSingle(
                                           aClass
                                          ) [DesignatorSingle]
                                         x
                                        ) [DesMember]
                                      ) [FactVar]
                                    ) [FactorSingle]
                                  ) [TermSinglePos]
                                ) [ExprTermList]
                              ) [StatementPrint]
                            ) [MultStatement]
                            StatementPrint(
                              ExprTermList(
                                TermSinglePos(
                                  FactorSingle(
                                    FactVar(
                                      DesignatorSingle(
                                       aClass
                                      ) [DesignatorSingle]
                                    ) [FactVar]
                                  ) [FactorSingle]
                                ) [TermSinglePos]
                              ) [ExprTermList]
                            ) [StatementPrint]
                          ) [MultStatement]
                          StatementIf(
                            ConditionPar(
                              ConditionSingle(
                                CondTermSingle(
                                  CondFactNoOp(
                                    ExprTermList(
                                      TermSinglePos(
                                        FactorSingle(
                                          FactorNum(
                                           2
                                          ) [FactorNum]
                                        ) [FactorSingle]
                                      ) [TermSinglePos]
                                    ) [ExprTermList]
                                  ) [CondFactNoOp]
                                ) [CondTermSingle]
                              ) [ConditionSingle]
                            ) [ConditionPar]
                            IfOnlyStm(
                              StatementMult(
                                NoStatementList(
                                ) [NoStatementList]
                              ) [StatementMult]
                            ) [IfOnlyStm]
                          ) [StatementIf]
                        ) [MultStatement]
                        StatementIf(
                          ConditionPar(
                            ConditionSingle(
                              CondTermSingle(
                                CondFactNoOp(
                                  ExprTermList(
                                    TermSinglePos(
                                      FactorSingle(
                                        FactVar(
                                          DesignatorSingle(
                                           b
                                          ) [DesignatorSingle]
                                        ) [FactVar]
                                      ) [FactorSingle]
                                    ) [TermSinglePos]
                                  ) [ExprTermList]
                                ) [CondFactNoOp]
                              ) [CondTermSingle]
                            ) [ConditionSingle]
                          ) [ConditionPar]
                          IfOnlyStm(
                            StatementMult(
                              NoStatementList(
                              ) [NoStatementList]
                            ) [StatementMult]
                          ) [IfOnlyStm]
                        ) [StatementIf]
                      ) [MultStatement]
                      StatementWhile(
                        DoStart(
                        ) [DoStart]
                        StatementMult(
                          NoStatementList(
                          ) [NoStatementList]
                        ) [StatementMult]
                        WhileCondStart(
                        ) [WhileCondStart]
                        ConditionSingle(
                          CondTermSingle(
                            CondFactNoOp(
                              ExprTermList(
                                TermSinglePos(
                                  FactorSingle(
                                    FactorNum(
                                     2
                                    ) [FactorNum]
                                  ) [FactorSingle]
                                ) [TermSinglePos]
                              ) [ExprTermList]
                            ) [CondFactNoOp]
                          ) [CondTermSingle]
                        ) [ConditionSingle]
                      ) [StatementWhile]
                    ) [MultStatement]
                    StatementWhile(
                      DoStart(
                      ) [DoStart]
                      StatementMult(
                        NoStatementList(
                        ) [NoStatementList]
                      ) [StatementMult]
                      WhileCondStart(
                      ) [WhileCondStart]
                      ConditionSingle(
                        CondTermSingle(
                          CondFactNoOp(
                            ExprTermList(
                              TermSinglePos(
                                FactorSingle(
                                  FactVar(
                                    DesignatorSingle(
                                     b
                                    ) [DesignatorSingle]
                                  ) [FactVar]
                                ) [FactorSingle]
                              ) [TermSinglePos]
                            ) [ExprTermList]
                          ) [CondFactNoOp]
                        ) [CondTermSingle]
                      ) [ConditionSingle]
                    ) [StatementWhile]
                  ) [MultStatement]
                  StatementSwitch(
                    SwitchStart(
                    ) [SwitchStart]
                    ExprTermList(
                      TermSinglePos(
                        FactorSingle(
                          FactVar(
                            DesignatorSingle(
                             b
                            ) [DesignatorSingle]
                          ) [FactVar]
                        ) [FactorSingle]
                      ) [TermSinglePos]
                    ) [ExprTermList]
                    SwitchExpr(
                    ) [SwitchExpr]
                    CaseListParam(
                      CaseListParam(
                        CaseListEmpty(
                        ) [CaseListEmpty]
                        CaseParam(
                         1
                          CaseColon(
                          ) [CaseColon]
                          MultStatement(
                            NoStatementList(
                            ) [NoStatementList]
                            StatementBreak(
                            ) [StatementBreak]
                          ) [MultStatement]
                        ) [CaseParam]
                      ) [CaseListParam]
                      CaseParam(
                       2
                        CaseColon(
                        ) [CaseColon]
                        MultStatement(
                          NoStatementList(
                          ) [NoStatementList]
                          StatementBreak(
                          ) [StatementBreak]
                        ) [MultStatement]
                      ) [CaseParam]
                    ) [CaseListParam]
                  ) [StatementSwitch]
                ) [MultStatement]
                StatementSwitch(
                  SwitchStart(
                  ) [SwitchStart]
                  ExprTermList(
                    TermSinglePos(
                      FactorSingle(
                        FactorNum(
                         2
                        ) [FactorNum]
                      ) [FactorSingle]
                    ) [TermSinglePos]
                  ) [ExprTermList]
                  SwitchExpr(
                  ) [SwitchExpr]
                  CaseListParam(
                    CaseListParam(
                      CaseListEmpty(
                      ) [CaseListEmpty]
                      CaseParam(
                       1
                        CaseColon(
                        ) [CaseColon]
                        MultStatement(
                          NoStatementList(
                          ) [NoStatementList]
                          StatementBreak(
                          ) [StatementBreak]
                        ) [MultStatement]
                      ) [CaseParam]
                    ) [CaseListParam]
                    CaseParam(
                     1
                      CaseColon(
                      ) [CaseColon]
                      MultStatement(
                        NoStatementList(
                        ) [NoStatementList]
                        StatementBreak(
                        ) [StatementBreak]
                      ) [MultStatement]
                    ) [CaseParam]
                  ) [CaseListParam]
                ) [StatementSwitch]
              ) [MultStatement]
              StatementDesignator(
                DesStmActPar(
                  DesignatorSingle(
                   fun
                  ) [DesignatorSingle]
                  ActParsSingle(
                    ExprTermList(
                      TermSinglePos(
                        FactorSingle(
                          FactVar(
                            DesignatorSingle(
                             a
                            ) [DesignatorSingle]
                          ) [FactVar]
                        ) [FactorSingle]
                      ) [TermSinglePos]
                    ) [ExprTermList]
                  ) [ActParsSingle]
                ) [DesStmActPar]
              ) [StatementDesignator]
            ) [MultStatement]
            StatementDesignator(
              DesStmActPar(
                DesignatorSingle(
                 fun
                ) [DesignatorSingle]
                ActParsList(
                  ActParsList(
                    ActParsSingle(
                      ExprTermList(
                        TermSinglePos(
                          FactorSingle(
                            FactVar(
                              DesignatorSingle(
                               a
                              ) [DesignatorSingle]
                            ) [FactVar]
                          ) [FactorSingle]
                        ) [TermSinglePos]
                      ) [ExprTermList]
                    ) [ActParsSingle]
                    ExprTermList(
                      TermSinglePos(
                        FactorSingle(
                          FactVar(
                            DesignatorSingle(
                             aClass
                            ) [DesignatorSingle]
                          ) [FactVar]
                        ) [FactorSingle]
                      ) [TermSinglePos]
                    ) [ExprTermList]
                  ) [ActParsList]
                  ExprTermList(
                    TermSinglePos(
                      FactorSingle(
                        FactVar(
                          DesignatorSingle(
                           b
                          ) [DesignatorSingle]
                        ) [FactVar]
                      ) [FactorSingle]
                    ) [TermSinglePos]
                  ) [ExprTermList]
                ) [ActParsList]
              ) [DesStmActPar]
            ) [StatementDesignator]
          ) [MultStatement]
          StatementDesignator(
            DesStmActPar(
              DesignatorSingle(
               fun
              ) [DesignatorSingle]
              ActParsList(
                ActParsList(
                  ActParsSingle(
                    ExprTermList(
                      TermSinglePos(
                        FactorSingle(
                          FactVar(
                            DesignatorSingle(
                             a
                            ) [DesignatorSingle]
                          ) [FactVar]
                        ) [FactorSingle]
                      ) [TermSinglePos]
                    ) [ExprTermList]
                  ) [ActParsSingle]
                  ExprTermList(
                    TermSinglePos(
                      FactorSingle(
                        FactVar(
                          DesignatorSingle(
                           aClass
                          ) [DesignatorSingle]
                        ) [FactVar]
                      ) [FactorSingle]
                    ) [TermSinglePos]
                  ) [ExprTermList]
                ) [ActParsList]
                ExprTermList(
                  TermSinglePos(
                    FactorSingle(
                      FactVar(
                        DesArr(
                          DesignatorSingle(
                           niz
                          ) [DesignatorSingle]
                          ExprTermList(
                            TermSinglePos(
                              FactorSingle(
                                FactorNum(
                                 0
                                ) [FactorNum]
                              ) [FactorSingle]
                            ) [TermSinglePos]
                          ) [ExprTermList]
                        ) [DesArr]
                      ) [FactVar]
                    ) [FactorSingle]
                  ) [TermSinglePos]
                ) [ExprTermList]
              ) [ActParsList]
            ) [DesStmActPar]
          ) [StatementDesignator]
        ) [MultStatement]
        StatementIf(
          ConditionPar(
            ConditionSingle(
              CondTermSingle(
                CondFactOp(
                  ExprTermList(
                    TermSinglePos(
                      FactorSingle(
                        FactVar(
                          DesignatorSingle(
                           aClass
                          ) [DesignatorSingle]
                        ) [FactVar]
                      ) [FactorSingle]
                    ) [TermSinglePos]
                  ) [ExprTermList]
                  RelEqual(
                  ) [RelEqual]
                  ExprTermList(
                    TermSinglePos(
                      FactorSingle(
                        FactorNew(
                          Type(
                           A
                          ) [Type]
                        ) [FactorNew]
                      ) [FactorSingle]
                    ) [TermSinglePos]
                  ) [ExprTermList]
                ) [CondFactOp]
              ) [CondTermSingle]
            ) [ConditionSingle]
          ) [ConditionPar]
          IfOnlyStm(
            StatementMult(
              NoStatementList(
              ) [NoStatementList]
            ) [StatementMult]
          ) [IfOnlyStm]
        ) [StatementIf]
      ) [MultStatement]
    ) [MethodDecPar]
  ) [MethodDeclUse]
) [Program]
INFO  15:45:15,238 - ===================================
ERROR 15:45:15,246 - Greska kod return expr. Rezultat izraza nije ekvivalentan tipu rezultata funkcije na liniji 15
ERROR 15:45:15,247 - Greska formalni parametar a je vec deklarisan na liniji 18
INFO  15:45:15,247 - Pristup globalnoj promenljivi (a) | Var a: int, 0, 0  na liniji 29
ERROR 15:45:15,248 - Greska break iskaz  se moze koristiti samo unutar do-while petlje i visestrukog grananja (switch)
ERROR 15:45:15,248 - Greska continue iskaz  se moze koristiti samo unutar do-while petlje 
INFO  15:45:15,248 - Pristup globalnoj promenljivi (a) | Var a: int, 0, 0  na liniji 33
INFO  15:45:15,248 - Koristi se promenljiva (a) | Var a: int, 0, 0  na liniji 33
INFO  15:45:15,252 - Pristup globalnoj promenljivi (a) | Var a: int, 0, 0  na liniji 40
INFO  15:45:15,252 - Koristi se promenljiva (a) | Var a: int, 0, 0  na liniji 40
INFO  15:45:15,253 - Pristup lokalnoj promenljivi (aClass) | Var aClass: Class A , 0, 1  na liniji 42
INFO  15:45:15,253 - Alocira se memorija za objekat klase (A) | Type A: Class A , 0, 0  na liniji 42
INFO  15:45:15,253 - Pristup lokalnoj promenljivi (niz) | Var niz: Arr of char, 1, 1  na liniji 43
INFO  15:45:15,253 - Alocira se memorija za niz tipa (char) | Type char: char, -1, -1  na liniji 43
INFO  15:45:15,253 - Pristup lokalnoj promenljivi (niz) | Var niz: Arr of char, 1, 1  na liniji 46
INFO  15:45:15,253 - Pristupa se clanu niza (niz) | Var niz: Arr of char, 1, 1  na liniji 46
INFO  15:45:15,254 - Pristup globalnoj promenljivi (b) | Var b: bool, 1, 0  na liniji 47
INFO  15:45:15,254 - Pristup lokalnoj promenljivi (aClass) | Var aClass: Class A , 0, 1  na liniji 48
INFO  15:45:15,254 - Pristup polju (x) | Fld x: int, 1, 1  na liniji 48
INFO  15:45:15,254 - Pristup lokalnoj promenljivi (aClass) | Var aClass: Class A , 0, 1  na liniji 49
ERROR 15:45:15,254 - Greska kod read. Ne moze da se smesti vrednost u simbol koji  nije tipa int,char ili bool na liniji 49
INFO  15:45:15,254 - Pristup lokalnoj promenljivi (niz) | Var niz: Arr of char, 1, 1  na liniji 52
INFO  15:45:15,257 - Pristupa se clanu niza (niz) | Var niz: Arr of char, 1, 1  na liniji 52
INFO  15:45:15,257 - Koristi se promenljiva (Elem:niz) | Elem:niz: char, -1, -1  na liniji 52
INFO  15:45:15,257 - Pristup globalnoj promenljivi (b) | Var b: bool, 1, 0  na liniji 53
INFO  15:45:15,257 - Koristi se promenljiva (b) | Var b: bool, 1, 0  na liniji 53
INFO  15:45:15,257 - Pristup lokalnoj promenljivi (aClass) | Var aClass: Class A , 0, 1  na liniji 54
INFO  15:45:15,258 - Pristup polju (x) | Fld x: int, 1, 1  na liniji 54
INFO  15:45:15,258 - Koristi se promenljiva (x) | Fld x: int, 1, 1  na liniji 54
INFO  15:45:15,258 - Pristup lokalnoj promenljivi (aClass) | Var aClass: Class A , 0, 1  na liniji 55
INFO  15:45:15,258 - Koristi se promenljiva (aClass) | Var aClass: Class A , 0, 1  na liniji 55
ERROR 15:45:15,258 - Greska kod print loop. Symbol koji treba da se ispise nije tipa int,char ili bool na liniji 55
ERROR 15:45:15,258 - Greska faktor kada nema relacioni operator mora biti tipa bool na liniji 59
INFO  15:45:15,258 - Pristup globalnoj promenljivi (b) | Var b: bool, 1, 0  na liniji 62
INFO  15:45:15,258 - Koristi se promenljiva (b) | Var b: bool, 1, 0  na liniji 62
ERROR 15:45:15,258 - Greska faktor kada nema relacioni operator mora biti tipa bool na liniji 66
INFO  15:45:15,258 - Pristup globalnoj promenljivi (b) | Var b: bool, 1, 0  na liniji 69
INFO  15:45:15,258 - Koristi se promenljiva (b) | Var b: bool, 1, 0  na liniji 69
INFO  15:45:15,258 - Pristup globalnoj promenljivi (b) | Var b: bool, 1, 0  na liniji 74
INFO  15:45:15,259 - Koristi se promenljiva (b) | Var b: bool, 1, 0  na liniji 74
ERROR 15:45:15,259 - Greska izraz kod switch-a treba da bude celobrojnog tipa na liniji 74
ERROR 15:45:15,259 - Greska grana sa celobrojnom konstantom (1) vec postoji na liniji 12
INFO  15:45:15,259 - Pristup globalnoj funkciji (fun) | Meth fun: int, 0, 3  na liniji 86
INFO  15:45:15,259 - Pristup globalnoj promenljivi (a) | Var a: int, 0, 0  na liniji 86
INFO  15:45:15,259 - Koristi se promenljiva (a) | Var a: int, 0, 0  na liniji 86
ERROR 15:45:15,262 - Greska funkcija (fun)  prihvata 3 parametara, dato je 1 na liniji 86
INFO  15:45:15,262 - Pristup globalnoj funkciji (fun) | Meth fun: int, 0, 3  na liniji 87
INFO  15:45:15,264 - Pristup globalnoj promenljivi (a) | Var a: int, 0, 0  na liniji 87
INFO  15:45:15,264 - Koristi se promenljiva (a) | Var a: int, 0, 0  na liniji 87
INFO  15:45:15,264 - Pristup lokalnoj promenljivi (aClass) | Var aClass: Class A , 0, 1  na liniji 87
INFO  15:45:15,264 - Koristi se promenljiva (aClass) | Var aClass: Class A , 0, 1  na liniji 87
INFO  15:45:15,264 - Pristup globalnoj promenljivi (b) | Var b: bool, 1, 0  na liniji 87
INFO  15:45:15,264 - Koristi se promenljiva (b) | Var b: bool, 1, 0  na liniji 87
ERROR 15:45:15,265 - Greska parametar (c) redni broj (3) nije kompatabilan sa pravim parametrom na liniji 87
INFO  15:45:15,265 - Pristup globalnoj funkciji (fun) | Meth fun: int, 0, 3  na liniji 88
INFO  15:45:15,265 - Pristup globalnoj promenljivi (a) | Var a: int, 0, 0  na liniji 88
INFO  15:45:15,265 - Koristi se promenljiva (a) | Var a: int, 0, 0  na liniji 88
INFO  15:45:15,265 - Pristup lokalnoj promenljivi (aClass) | Var aClass: Class A , 0, 1  na liniji 88
INFO  15:45:15,265 - Koristi se promenljiva (aClass) | Var aClass: Class A , 0, 1  na liniji 88
INFO  15:45:15,269 - Pristup lokalnoj promenljivi (niz) | Var niz: Arr of char, 1, 1  na liniji 88
INFO  15:45:15,269 - Pristupa se clanu niza (niz) | Var niz: Arr of char, 1, 1  na liniji 88
INFO  15:45:15,269 - Koristi se promenljiva (Elem:niz) | Elem:niz: char, -1, -1  na liniji 88
INFO  15:45:15,269 - Pristup lokalnoj promenljivi (aClass) | Var aClass: Class A , 0, 1  na liniji 92
INFO  15:45:15,269 - Koristi se promenljiva (aClass) | Var aClass: Class A , 0, 1  na liniji 92
INFO  15:45:15,270 - Alocira se memorija za objekat klase (A) | Type A: Class A , 0, 0  na liniji 92
INFO  15:45:15,270 - ===================================
ERROR 15:45:15,273 - Parsiranje NIJE uspesno zavrseno!
